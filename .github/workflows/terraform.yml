name: Terraform CI/CD

# You can still auto-run on push, or just trigger manually
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Which environment to deploy'
        required: true
        default: dev
        type: choice
        options:
          - dev
          - staging
          - prod
  push:
    branches:
      - main
      - test
      - dev

permissions:
  contents: read    # for checkout
  id-token: write   # for OIDC login

jobs:
  terraform:
    runs-on: ubuntu-latest

    # make the chosen env available everywhere
    env:
      TF_ENV: ${{ github.ref_name }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_AZUREAD: true

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ secrets.STATE_RESOURCE_GROUP }}" \
            -backend-config="storage_account_name=${{ secrets.STATE_STORAGE_ACCOUNT }}" \
            -backend-config="container_name=${{ secrets.STATE_STORAGE_CONTAINER }}" \
            -backend-config="key=${{ env.TF_ENV }}tfstate.tfstate"
          

      - name: Terraform Plan
        # picks up env/<env>.tfvars and writes plan to tfplan-<env>
        run: |
          terraform plan \
            -var-file="env/${{ env.TF_ENV }}.tfvars" \
            -out="tfplan-${{ env.TF_ENV }}"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/dev'
        # only auto-apply for manual runs or on main branch
        run: terraform apply -auto-approve "tfplan-${{ env.TF_ENV }}"

